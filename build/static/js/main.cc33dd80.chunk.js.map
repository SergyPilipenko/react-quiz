{"version":3,"sources":["store/actions/actionTypes.js","store/reducers/quiz.js","store/reducers/create.js","store/reducers/auth.js","store/reducers/rootReducer.js","components/Navigation/MenuToggle/MenuToggle.js","components/UI/Backdrop/Backdrop.js","components/Navigation/Drawer/Drawer.js","hoc/Layout/Layout.js","components/ActiveQuiz/AnswersList/AnswerItem/AnswerItem.js","components/ActiveQuiz/AnswersList/AnswersList.js","components/ActiveQuiz/ActiveQuiz.js","components/UI/Button/Button.js","components/FinishedQuiz/FinishedQuiz.js","components/UI/Loader/Loader.js","axios/axios-quiz.js","store/actions/quiz.js","conteiners/Quiz/Quiz.js","conteiners/QuizList/QuizList.js","components/UI/Input/Input.js","store/actions/auth.js","conteiners/Auth/Auth.js","components/UI/Select/Select.js","form/formFramework.js","hoc/Auxillary/Auxillary.js","conteiners/QuizCreator/QuizCreator.js","store/actions/create.js","components/Logout/Logout.js","App.js","registerServiceWorker.js","index.js"],"names":["FETCH_QUIZES_START","FETCH_QUIZES_SUCCESS","FETCH_QUIZES_ERROR","FETCH_QUIZ_SUCCESS","QUIZ_SET_STATE","FINISH_QUIZ","QUIZ_NEXT_QUESTION","QUIZ_RETRY","CREATE_QUIZ_QUESTION","RESET_QUIZ_CREATION","AUTH_SUCCESS","AUTH_LOGOUT","initialState","quizes","loading","error","results","isFinished","activeQuestion","answerState","quiz","token","combineReducers","state","arguments","length","undefined","action","type","Object","objectSpread","number","create","toConsumableArray","concat","item","auth","MenuToggle","props","cls","isOpen","push","react_default","a","createElement","className","join","onClick","onToggle","Backdrop","Drawer","clickHandler","_this","onClose","links","_this2","this","map","link","index","key","NavLink","to","exact","activeClassName","lable","isAuthenticated","Fragment","renderLinks","UI_Backdrop_Backdrop","Component","Layout","menu","toggleMenuHandler","setState","menuCloseHandler","Navigation_Drawer_Drawer","Navigation_MenuToggle_MenuToggle","children","connect","AnswerItem","onAnswerClick","answer","id","text","AnswersList","AnswersList_AnswerItem_AnswerItem","ActiveQuiz","answerNumber","question","quizLength","ActiveQuiz_AnswersList_AnswersList","answers","Button","disabled","FinishedQuiz","successCount","keys","reduce","total","quizItem","onRetry","Link","Loader","axios","baseURL","fetchQuizSuccess","fetchQuizesStart","fetchQuizesSuccess","fetchQuizesError","e","quizSetState","quizAnswerClick","answerId","dispatch","getState","rightAnswerId","defineProperty","timeout","window","setTimeout","isQuizFinished","clearTimeout","Quiz","retryQuiz","fetchQuizById","match","params","UI_Loader_Loader","components_FinishedQuiz_FinishedQuiz","components_ActiveQuiz_ActiveQuiz","quizId","_ref2","asyncToGenerator","regenerator_default","mark","_callee2","response","wrap","_context2","prev","next","get","sent","data","t0","stop","_x2","apply","QuizList","name","fetchQuizes","renderQuizes","_ref","_callee","_context","forEach","_x","isInvalid","valid","touched","shouldValidate","Input","inputType","htmlFor","Math","random","label","value","onChange","errorMessage","autoLogout","time","logout","localStorage","removeItem","authSuccess","Auth","isValid","formControls","email","validation","required","password","minLength","loginHandler","registerHandler","submitHandler","event","preventDefault","onChangeHandler","controlName","control","target","validateControl","isFormValid","trim","is","UI_Input_Input","onSubmit","renderInputs","UI_Button_Button","isLogin","authData","url","expirationDate","returnSecureToken","post","Date","getTime","expiresIn","setItem","idToken","localId","Select","options","option","createControl","config","Auxillary","createOptionControl","createFormControls","option1","option2","option3","option4","QuizCreator","sibmitHandler","addQuestionHandler","_this$state$formContr","questionItem","createQuizQuestion","createQuizHandler","finishCreateQuiz","changeHandler","validate","hasOwnProperty","validateForm","selectChangeHandler","Auxillary_Auxillary","select","UI_Select_Select","renderControls","Logout","Redirect","App","authLogin","routes","Switch","Route","path","component","hoc_Layout_Layout","withRouter","getItem","isLocalhost","Boolean","location","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","rootReducer","applyMiddleware","thunk","app","es","BrowserRouter","src_App","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","fetch","status","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.cc33dd80.chunk.js","sourcesContent":["export const FETCH_QUIZES_START = 'FETCH_QUIZES_START'\nexport const FETCH_QUIZES_SUCCESS = 'FETCH_QUIZES_SUCCESS'\nexport const FETCH_QUIZES_ERROR = 'FETCH_QUIZES_ERROR'\nexport const FETCH_QUIZ_SUCCESS = 'FETCH_QUIZ_SUCCESS'\n\nexport const QUIZ_SET_STATE = 'QUIZ_SET_STATE'\nexport const FINISH_QUIZ = 'FINISH_QUIZ'\nexport const QUIZ_NEXT_QUESTION = 'QUIZ_NEXT_QUESTION'\nexport const QUIZ_RETRY = 'QUIZ_RETRY'\n\nexport const CREATE_QUIZ_QUESTION = 'CREATE_QUIZ_QUESTION'\nexport const RESET_QUIZ_CREATION = 'RESET_QUIZ_CREATION'\n\nexport const AUTH_SUCCESS = 'AUTH_SUCCESS'\nexport const AUTH_LOGOUT = 'AUTH_LOGOUT'","import {\n  FETCH_QUIZ_SUCCESS,\n  FETCH_QUIZES_ERROR,\n  FETCH_QUIZES_START,\n  FETCH_QUIZES_SUCCESS, FINISH_QUIZ, QUIZ_NEXT_QUESTION, QUIZ_RETRY,\n  QUIZ_SET_STATE\n} from '../actions/actionTypes';\n\nconst initialState = {\n  quizes: [],\n  loading: false,\n  error: null,\n  results: {},\n  isFinished: false,\n  activeQuestion: 0,\n  answerState: null,\n  quiz: null\n}\n\nexport default function quizReducer(state = initialState, action) {\n  switch (action.type) {\n    case FETCH_QUIZES_START:\n      return {\n        ...state, loading: true\n      }\n    case FETCH_QUIZES_SUCCESS:\n      return {\n        ...state, loading: false, quizes: action.quizes\n      }\n    case FETCH_QUIZES_ERROR:\n      return {\n        ...state, loading: false, error: action.error\n      }\n    case FETCH_QUIZ_SUCCESS:\n      return {\n        ...state, loading: false, quiz: action.quiz\n      }\n    case QUIZ_SET_STATE:\n      return {\n        ...state, answerState: action.answerState, results: action.results\n      }\n    case FINISH_QUIZ:\n      return {\n        ...state, isFinished: true\n      }\n    case QUIZ_NEXT_QUESTION:\n      return {\n        ...state, answerState: null, activeQuestion: action.number\n      }\n    case QUIZ_RETRY:\n      return {\n        ...state,\n        activeQuestion: 0,\n        answerState: null,\n        isFinished: false,\n        results: {}\n      }\n    default:\n      return state\n  }\n}","import {CREATE_QUIZ_QUESTION, RESET_QUIZ_CREATION} from '../actions/actionTypes'\n\nconst initialState = {\n  quiz: []\n}\n\nexport default function createReducer(state = initialState, action) {\n  switch (action.type) {\n    case CREATE_QUIZ_QUESTION:\n      return {\n        ...state,\n        quiz: [...state.quiz, action.item]\n      }\n    case RESET_QUIZ_CREATION:\n      return {\n        ...state, quiz: []\n      }\n    default:\n      return state\n  }\n}","import {AUTH_LOGOUT, AUTH_SUCCESS} from '../actions/actionTypes';\n\nconst initialState = {\n  token: null\n}\n\n\nexport default function authReducer(state = initialState, action) {\n  switch (action.type) {\n    case AUTH_SUCCESS:\n      return {\n        ...state, token: action.token\n      }\n    case AUTH_LOGOUT:\n      return {\n        ...state, token: null\n      }\n    default:\n      return state\n  }\n}","import {combineReducers} from 'redux'\nimport quizReducer from './quiz'\nimport createReducer from './create'\nimport authReducer from './auth'\n\nexport default combineReducers({\n  quiz: quizReducer,\n  create: createReducer,\n  auth: authReducer\n})","/**\r\n * Created by Sergeys on 21.11.2018.\r\n */\r\nimport React from 'react';\r\nimport classes from './MenuToggle.css';\r\n\r\nconst MenuToggle = props =>{\r\n    const cls = ['MenuToggle','fa'];\r\n    if(props.isOpen){\r\n        cls.push('fa-times');\r\n        cls.push('open');\r\n    }else {\r\n        cls.push('fa-bars');\r\n    }\r\n    return(\r\n        <i className={cls.join(' ')}\r\n        onClick={props.onToggle}/>\r\n    )\r\n}\r\nexport default MenuToggle;\r\n","/**\r\n * Created by Sergeys on 21.11.2018.\r\n */\r\nimport React from 'react';\r\nimport classes from './Backdrop.css';\r\nconst Backdrop = props => <div className=\"Backdrop\" onClick={props.onClick}/>\r\n\r\nexport default Backdrop;","/**\r\n * Created by Sergeys on 21.11.2018.\r\n */\r\nimport React,{Component} from 'react';\r\nimport  classes from './Drawer.css';\r\nimport Backdrop from '../../UI/Backdrop/Backdrop';\r\nimport {NavLink} from 'react-router-dom';\r\n\r\nclass Drawer extends Component{\r\n    clickHandler =() =>{\r\n    this.props.onClose()\r\n}\r\n    renderLinks(links){\r\n        return links.map((link,index) => {\r\n            return(\r\n                <li key={index}>\r\n                    <NavLink\r\n                      to={link.to}\r\n                      exact={link.exact}\r\n                      activeClassName=\"Drawer+' '+ active\"\r\n                      onClick={this.clickHandler}>{link.lable}</NavLink>\r\n\r\n                </li>\r\n            )\r\n        })\r\n    }\r\n    render(){\r\n        const cls = ['Drawer'];\r\n        if (!this.props.isOpen){\r\n            cls.push('close');\r\n        }\r\n        const links =[\r\n            {to:'/',lable: 'Список',exact: true},\r\n\r\n\r\n        ]\r\n        if(this.props.isAuthenticated){\r\n            links.push({to: '/quiz-creator',lable: 'Создать тест',exact: false})\r\n            links.push({to: '/logout',lable: 'Выйти',exact: false})\r\n        }else{\r\n             links.push({to: '/auth',lable: 'Авторизация',exact: false})\r\n        }\r\n        return(\r\n            <React.Fragment>\r\n            <nav className={cls.join(' ')}>\r\n                <ul>\r\n                    {this.renderLinks(links)}\r\n                </ul>\r\n            </nav>\r\n                {this.props.isOpen ? <Backdrop onClick={this.props.onClose}/> : null}\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\nexport default Drawer;\r\n","import React, {Component} from 'react';\n\nimport classes from './Layout.css';\nimport MenuToggle from '../../components/Navigation/MenuToggle/MenuToggle';\nimport Drawer from '../../components/Navigation/Drawer/Drawer';\nimport {connect} from \"react-redux\";\n\n\nclass Layout extends Component {\n    state = {\n        menu: false\n    }\n    toggleMenuHandler = () => {\n    this.setState({\n    menu: !this.state.menu\n\n    })\n    }\n    menuCloseHandler = () =>{\n        this.setState({\n            menu: false\n        })\n    }\n\n\n  render() {\n\n    return (\n\n     <div className=\"Layout\">\n         <Drawer\n             isOpen={this.state.menu}\n             onClose = {this.menuCloseHandler}\n             isAuthenticated={this.props.isAuthenticated}\n         />\n\n         <MenuToggle onToggle ={this.toggleMenuHandler}\n         isOpen={this.state.menu}\n         />\n         <main>\n             {this.props.children}\n         </main>\n     </div>\n\n   )\n  }\n}\nfunction mapStateToProps(state) {\n    return{\n        isAuthenticated:!!state.auth.token\n    }\n}\n        export default connect(mapStateToProps)( Layout);","/**\r\n * Created by Sergeys on 15.11.2018.\r\n */\r\nimport React from 'react';\r\nimport classes from './AnswerItem.css';\r\n\r\nconst AnswerItem = props => {\r\n\r\n\r\n\r\n\r\n    return(\r\n        <li className={\r\n       ` AnswerItem ${props.state} `\r\n    }  onClick = {() => props.onAnswerClick(props.answer.id)}>\r\n            {props.answer.text}\r\n\r\n        </li>\r\n    )\r\n}\r\nexport default AnswerItem;","/**\r\n * Created by Sergeys on 15.11.2018.\r\n */\r\nimport React from 'react';\r\nimport classes from './AnswersList.css';\r\nimport AnswerItem from './AnswerItem/AnswerItem';\r\n\r\nconst AnswersList = props => (\r\n    <ul className=\"AnswersList\">\r\n        {props.answer.map((answer,index)=>{\r\n         return(\r\n             <AnswerItem\r\n                 key={index}\r\n                 answer= {answer}\r\n                 onAnswerClick = {props.onAnswerClick}\r\n                 state = {props.state ? props.state[answer.id] : null}\r\n             />\r\n         )\r\n        })}\r\n    </ul>\r\n)\r\nexport default AnswersList;","/**\r\n * Created by Sergeys on 15.11.2018.\r\n */\r\nimport React from 'react';\r\nimport classes from './AqtiveQuiz.css';\r\nimport AnswerList from './AnswersList/AnswersList';\r\n\r\nconst ActiveQuiz = props => (\r\n    <div className=\"ActiveQuiz\">\r\n       <p className=\"Question\">\r\n           <span>\r\n               <strong>{props.answerNumber}</strong>&nbsp;\r\n               {props.question}\r\n           </span>\r\n           <small>{props.answerNumber} из {props.quizLength}</small>\r\n       </p>\r\n           <AnswerList\r\n               state = {props.state}\r\n           answer={props.answers}\r\n           onAnswerClick = {props.onAnswerClick}\r\n           />\r\n    </div>\r\n)\r\nexport default ActiveQuiz;\r\n","/**\r\n * Created by Sergeys on 19.11.2018.\r\n */\r\nimport React from 'react';\r\nimport classes from './Button.css';\r\n\r\nconst Button = props => {\r\n    return(\r\n        <button onClick={props.onClick} className=\"Button\" disabled={props.disabled}>\r\n            {props.children}\r\n        </button>\r\n    )\r\n}\r\nexport default Button;\r\n","import React from 'react';\r\nimport classes from './FinishedQuiz.css';\r\nimport Button from  '../UI/Button/Button';\r\nimport {Link} from 'react-router-dom';\r\n\r\n\r\nconst FinishedQuiz = props => {\r\n    const successCount = Object.keys(props.results).reduce((total, key) => {\r\n        if (props.results[key] === 'success') {\r\n            total++\r\n        }\r\n\r\n        return total\r\n    }, 0)\r\n\r\n\r\n    return (\r\n        <div className=\"FinishedQuiz\">\r\n            <ul>\r\n                { props.quiz.map((quizItem, index) => {\r\n                    const cls = [\r\n                        'fa',\r\n                        props.results[quizItem.id] === 'error' ? 'fa-times' : 'fa-check',\r\n                        props.results[quizItem.id]\r\n                    ]\r\n\r\n                    return (\r\n                        <li\r\n                            key={index}\r\n                        >\r\n                            <strong>{index + 1}</strong>.&nbsp;\r\n                            {quizItem.question}\r\n                            <i className={cls.join(' ')} />\r\n                        </li>\r\n                    )\r\n\r\n                }) }\r\n            </ul>\r\n\r\n            <p>Правильно {successCount} из {props.quiz.length}</p>\r\n\r\n            <div>\r\n\r\n                <button className=\"primary2\" onClick={props.onRetry}>Повторить</button>\r\n               <Link to =\"/\">\r\n                <button className=\"success2\">Перейти в список тестов</button>\r\n               </Link>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FinishedQuiz","/**\r\n * Created by Максим П on 10.12.2018.\r\n */\r\nimport React from 'react'\r\nimport './Loader.css'\r\n\r\nconst Loader = props =>(\r\n    <div className=\"center\">\r\n    <div className=\"Loader\"  >\r\n        <div/><div/>\r\n    </div>\r\n    </div>\r\n)\r\n\r\n\r\nexport default Loader\r\n","/**\r\n * Created by Максим П on 10.12.2018.\r\n */\r\nimport axios from 'axios'\r\n\r\nexport default axios.create({\r\n    baseURL: 'https://react-quiz-c8a78.firebaseio.com/'\r\n})\r\n","import axios from '../../axios/axios-quiz'\nimport {\n  FETCH_QUIZ_SUCCESS,\n  FETCH_QUIZES_ERROR,\n  FETCH_QUIZES_START,\n  FETCH_QUIZES_SUCCESS, FINISH_QUIZ, QUIZ_NEXT_QUESTION, QUIZ_RETRY,\n  QUIZ_SET_STATE\n} from './actionTypes'\n\nexport function fetchQuizes() {\n  return async dispatch => {\n    dispatch(fetchQuizesStart())\n    try {\n      const response = await axios.get('/quizes.json')\n\n      const quizes = []\n\n      Object.keys(response.data).forEach((key, index) => {\n        quizes.push({\n          id: key,\n          name: `Тест №${index + 1}`\n        })\n      })\n\n      dispatch(fetchQuizesSuccess(quizes))\n    } catch (e) {\n      dispatch(fetchQuizesError(e))\n    }\n  }\n}\n\nexport function fetchQuizById(quizId) {\n  return async dispatch => {\n    dispatch(fetchQuizesStart())\n\n    try {\n      const response = await axios.get(`/quizes/${quizId}.json`)\n      const quiz = response.data\n\n      dispatch(fetchQuizSuccess(quiz))\n    } catch (e) {\n      dispatch(fetchQuizesError(e))\n    }\n  }\n}\n\nexport function fetchQuizSuccess(quiz) {\n  return {\n    type: FETCH_QUIZ_SUCCESS,\n    quiz\n  }\n}\n\nexport function fetchQuizesStart() {\n  return {\n    type: FETCH_QUIZES_START\n  }\n}\n\nexport function fetchQuizesSuccess(quizes) {\n  return {\n    type: FETCH_QUIZES_SUCCESS,\n    quizes\n  }\n}\n\nexport function fetchQuizesError(e) {\n  return {\n    type: FETCH_QUIZES_ERROR,\n    error: e\n  }\n}\n\nexport function quizSetState(answerState, results) {\n  return {\n    type: QUIZ_SET_STATE,\n    answerState, results\n  }\n}\n\nexport function finishQuiz() {\n  return {\n    type: FINISH_QUIZ\n  }\n}\n\nexport function quizNextQuestion(number) {\n  return {\n    type: QUIZ_NEXT_QUESTION,\n    number\n  }\n}\n\nexport function retryQuiz() {\n  return {\n    type: QUIZ_RETRY\n  }\n}\n\nexport function quizAnswerClick(answerId) {\n  return (dispatch, getState) => {\n    const state = getState().quiz\n\n    if (state.answerState) {\n      const key = Object.keys(state.answerState)[0]\n      if (state.answerState[key] === 'success') {\n        return\n      }\n    }\n\n    const question = state.quiz[state.activeQuestion]\n    const results = state.results\n\n    if (question.rightAnswerId === answerId) {\n      if (!results[question.id]) {\n        results[question.id] = 'success'\n      }\n\n      dispatch(quizSetState({[answerId]: 'success'}, results))\n\n      const timeout = window.setTimeout(() => {\n        if (isQuizFinished(state)) {\n          dispatch(finishQuiz())\n        } else {\n          dispatch(quizNextQuestion(state.activeQuestion + 1))\n        }\n        window.clearTimeout(timeout)\n      }, 1000)\n    } else {\n      results[question.id] = 'error'\n      dispatch(quizSetState({[answerId]: 'error'}, results))\n    }\n  }\n}\n\nfunction isQuizFinished(state) {\n  return state.activeQuestion + 1 === state.quiz.length\n}","import React, {Component} from 'react'\r\nimport classes from './Quiz.css'\r\nimport ActiveQuiz from '../../components/ActiveQuiz/ActiveQuiz'\r\nimport FinishedQuiz from '../../components/FinishedQuiz/FinishedQuiz'\r\n\r\nimport Loader from '../../components/UI/Loader/Loader'\r\nimport {connect} from 'react-redux'\r\nimport {fetchQuizById, quizAnswerClick, retryQuiz} from '../../store/actions/quiz'\r\n\r\nclass Quiz extends Component {\r\n\r\n\r\n\r\n\r\n\r\n    componentWillUnmount(){\r\n        this.props.retryQuiz()\r\n    }\r\n    componentDidMount() {\r\n        this.props.fetchQuizById(this.props.match.params.id)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className='Quiz'>\r\n                <div className='QuizWrapper'>\r\n                    <h1>Ответьте на все вопросы</h1>\r\n\r\n                    {\r\n                        this.props.loading || !this.props.quiz\r\n                            ? <Loader />\r\n                            : this.props.isFinished\r\n                            ? <FinishedQuiz\r\n                                results={this.props.results}\r\n                                quiz={this.props.quiz}\r\n                                onRetry={this.props.retryQuiz}\r\n                            />\r\n                            : <ActiveQuiz\r\n                                answers={this.props.quiz[this.props.activeQuestion].answers}\r\n                                question={this.props.quiz[this.props.activeQuestion].question}\r\n                                onAnswerClick={this.props.quizAnswerClick}\r\n                                quizLength={this.props.quiz.length}\r\n                                answerNumber={this.props.activeQuestion + 1}\r\n                                state={this.props.answerState}\r\n                            />\r\n\r\n                    }\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        results: state.quiz.results,\r\n        isFinished: state.quiz.isFinished,\r\n        activeQuestion: state.quiz.activeQuestion,\r\n        answerState: state.quiz.answerState,\r\n        quiz: state.quiz.quiz,\r\n        loading: state.quiz.loading\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        fetchQuizById: id => dispatch(fetchQuizById(id)),\r\n        quizAnswerClick: answerId => dispatch(quizAnswerClick(answerId)),\r\n        retryQuiz: () => dispatch(retryQuiz())\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Quiz)","import React, {Component} from 'react'\r\nimport classes from './QuizList.css'\r\nimport {NavLink} from 'react-router-dom'\r\nimport Loader from '../../components/UI/Loader/Loader'\r\nimport {connect} from 'react-redux'\r\nimport {fetchQuizes} from '../../store/actions/quiz';\r\n\r\nclass QuizList extends Component {\r\n\r\n    renderQuizes() {\r\n        return this.props.quizes.map(quiz => {\r\n            return (\r\n                <li\r\n                    key={quiz.id}\r\n                >\r\n                    <NavLink to={'/quiz/' + quiz.id}>\r\n                        {quiz.name}\r\n                    </NavLink>\r\n                </li>\r\n            )\r\n        })\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.fetchQuizes()\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className='QuizList'>\r\n                <div>\r\n                    <h1>Список тестов</h1>\r\n\r\n                    {\r\n                        this.props.loading && this.props.quizes.length !== 0\r\n                            ? <Loader />\r\n                            : <ul>\r\n                            { this.renderQuizes() }\r\n                        </ul>\r\n                    }\r\n\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        quizes: state.quiz.quizes,\r\n        loading: state.quiz.loading\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        fetchQuizes: () => dispatch(fetchQuizes())\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(QuizList)","import React from 'react'\r\nimport classes from './Input.css'\r\n\r\nfunction isInvalid({valid, touched, shouldValidate}) {\r\n    return !valid && shouldValidate && touched\r\n}\r\n\r\nconst Input = props => {\r\n    const inputType = props.type || 'text'\r\n    const cls = ['Input']\r\n    const htmlFor = `${inputType}-${Math.random()}`\r\n\r\n    if (isInvalid(props)) {\r\n        cls.push('invalid')\r\n    }\r\n\r\n\r\n    return (\r\n        <div className={cls.join(' ')}>\r\n            <label htmlFor={htmlFor}>{props.label}</label>\r\n            <input\r\n                type={inputType}\r\n                id={htmlFor}\r\n                value={props.value}\r\n                onChange={props.onChange}\r\n            />\r\n\r\n            {\r\n                isInvalid(props)\r\n                    ? <span>{props.errorMessage || 'Введите верное значение'}</span>\r\n                    : null\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Input","import axios from 'axios'\nimport {AUTH_LOGOUT, AUTH_SUCCESS} from './actionTypes';\n\nexport function auth(email, password, isLogin) {\n  return async dispatch => {\n    const authData = {\n      email, password,\n      returnSecureToken: true\n    }\n\n    let url = 'https://www.googleapis.com/identitytoolkit/v3/relyingparty/signupNewUser?key=AIzaSyBNcbeFqT2BqxU24uPZHiLigm_3h6aC0jQ'\n\n    if (isLogin) {\n      url = 'https://www.googleapis.com/identitytoolkit/v3/relyingparty/verifyPassword?key=AIzaSyBNcbeFqT2BqxU24uPZHiLigm_3h6aC0jQ'\n    }\n\n    const response = await axios.post(url, authData)\n    const data = response.data\n\n    const expirationDate = new Date(new Date().getTime() + data.expiresIn * 1000)\n\n    localStorage.setItem('token', data.idToken)\n    localStorage.setItem('userId', data.localId)\n    localStorage.setItem('expirationDate', expirationDate)\n\n    dispatch(authSuccess(data.idToken))\n    dispatch(autoLogout(data.expiresIn))\n  }\n}\n\nexport function autoLogout(time) {\n  return dispatch => {\n    setTimeout(() => {\n      dispatch(logout())\n    }, time * 1000)\n  }\n}\nexport function autoLogin() {\n    return dispatch =>{\n        const token = localStorage.getItem('token')\n        if(!token){\n            dispatch(logout())\n        }else {\n            const expirationDate = new Date(localStorage.getItem('expirationDate'))\n            if(expirationDate<=new Date()){\n                dispatch(logout())\n            }else {\n                dispatch(authSuccess(token))\n                dispatch(autoLogout((expirationDate.getTime() -new Date().getTime())/1000))\n            }\n        }\n    }\n}\n\nexport function logout() {\n  localStorage.removeItem('token')\n  localStorage.removeItem('userId')\n  localStorage.removeItem('expirationDate')\n  return {\n    type: AUTH_LOGOUT\n  }\n}\n\nexport function authSuccess(token) {\n  return {\n    type: AUTH_SUCCESS,\n    token\n  }\n}","import React, {Component} from 'react'\r\nimport classes from './Auth.css'\r\nimport Button from '../../components/UI/Button/Button'\r\nimport Input from '../../components/UI/Input/Input'\r\nimport is from 'is_js'\r\nimport axios from 'axios'\r\nimport {connect} from \"react-redux\";\r\nimport {auth} from \"../../store/actions/auth\";\r\n\r\n class Auth extends Component {\r\n\r\n    state = {\r\n        isValid: false,\r\n        formControls: {\r\n            email: {\r\n                value: '',\r\n                type: 'email',\r\n                label: 'Email',\r\n                errorMessage: 'Введите корректный email',\r\n                valid: false,\r\n                touched: false,\r\n                validation: {\r\n                    required: true,\r\n                    email: true\r\n                }\r\n            },\r\n            password: {\r\n                value: '',\r\n                type: 'password',\r\n                label: 'Пароль',\r\n                errorMessage: 'Введите корректный пароль',\r\n                valid: false,\r\n                touched: false,\r\n                validation: {\r\n                    required: true,\r\n                    minLength: 6\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    loginHandler = () => {\r\n        this.props.auth(\r\n            this.state.formControls.email.value,\r\n            this.state.formControls.password.value,\r\n            true\r\n        )\r\n\r\n\r\n    }\r\n\r\n    registerHandler = () => {\r\n        this.props.auth(\r\n            this.state.formControls.email.value,\r\n            this.state.formControls.password.value,\r\n            false\r\n        )\r\n\r\n         }\r\n\r\n    submitHandler = event => {\r\n        event.preventDefault()\r\n    }\r\n\r\n    validateControl(value, validation) {\r\n        if (!validation) {\r\n            return true\r\n        }\r\n\r\n        let isValid = true\r\n\r\n        if (validation.required) {\r\n            isValid = value.trim() !== '' && isValid\r\n        }\r\n\r\n        if (validation.email) {\r\n            isValid = is.email(value) && isValid\r\n        }\r\n\r\n        if (validation.minLength) {\r\n            isValid = value.length >= validation.minLength && isValid\r\n        }\r\n\r\n        return isValid\r\n    }\r\n\r\n    onChangeHandler = (event, controlName) => {\r\n        const formControls = { ...this.state.formControls }\r\n        const control = { ...formControls[controlName] }\r\n\r\n        control.value = event.target.value\r\n        control.touched = true\r\n        control.valid = this.validateControl(control.value, control.validation)\r\n\r\n        formControls[controlName] = control\r\n\r\n        let isFormValid = true\r\n        Object.keys(formControls).forEach(name => {\r\n            isFormValid = formControls[name].valid && isFormValid\r\n        })\r\n\r\n        this.setState({\r\n            formControls,isFormValid\r\n        })\r\n    }\r\n\r\n    renderInputs() {\r\n        return Object.keys(this.state.formControls).map((controlName, index) => {\r\n            const control = this.state.formControls[controlName]\r\n            return (\r\n                <Input\r\n                    key={controlName + index}\r\n                    type={control.type}\r\n                    value={control.value}\r\n                    valid={control.valid}\r\n                    touched={control.touched}\r\n                    label={control.label}\r\n                    shouldValidate={!!control.validation}\r\n                    errorMessage={control.errorMessage}\r\n                    onChange={event => this.onChangeHandler(event, controlName)}\r\n                />\r\n            )\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className='Auth'>\r\n                <div>\r\n                    <h1>Авторизация</h1>\r\n\r\n                    <form onSubmit={this.submitHandler} className='AuthForm'>\r\n\r\n                        { this.renderInputs() }\r\n\r\n                        <Button\r\n                            type=\"success\"\r\n                            onClick={this.loginHandler}\r\n                            disabled ={!this.state.isFormValid}\r\n                        >\r\n                            Войти\r\n                        </Button>\r\n\r\n                        <Button\r\n                            type=\"primary\"\r\n                            onClick={this.registerHandler}\r\n                            disabled ={!this.state.isFormValid}\r\n                        >\r\n                            Зарегистрироваться\r\n                        </Button>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nfunction mapDispatchToProps(dispatch) {\r\n     return{\r\n         auth: (email,password,isLogin) =>dispatch(auth(email,password,isLogin))\r\n     }\r\n\r\n}\r\nexport default connect(null,mapDispatchToProps)(Auth)","import React from 'react';\r\nimport classes from './Select.css';\r\n\r\nconst Select = props => {\r\n    const htmlFor =`${props.label}-${Math.random()}`\r\n    return(\r\n        <div className=\"Select\">\r\n            <label htmlFor={htmlFor}>{props.label}</label>\r\n            <select\r\n            id={htmlFor}\r\n            value={props.value}\r\n            onChange={props.onChange}\r\n            >\r\n                {props.options.map((option,index) =>{\r\n                    return(\r\n                        <option\r\n                        value={option.value}\r\n                        key={option.value + index}\r\n                        >{option.text}</option>\r\n                    )\r\n                })}\r\n\r\n            </select>\r\n        </div>\r\n    )\r\n}\r\nexport default Select\r\n","export function  createControl(config,validation) {\r\n    return{\r\n        ...config,\r\n        validation,\r\n        valid: !validation,\r\n        touched: false,\r\n        value: ''\r\n    }\r\n\r\n}\r\nexport function validate(value,validation = null) {\r\n    if(!validation){\r\n        return true\r\n    }\r\n    let isValid = true\r\n    if(validation.required){\r\n        isValid = value.trim() !=='' && isValid\r\n    }\r\n\r\n    return isValid\r\n}\r\nexport function validateForm(formControls) {\r\n    let isFormValid = true\r\n    for(let control in formControls){\r\n        if (formControls.hasOwnProperty(control)){\r\n            isFormValid = formControls[control].valid && isFormValid\r\n        }\r\n    }\r\n    return isFormValid\r\n\r\n    \r\n}","const Auxillary = props => props.children\r\n\r\nexport default Auxillary","import React, {Component} from 'react'\r\nimport classes from './QuizCreator.css'\r\nimport Button from '../../components/UI/Button/Button'\r\nimport Input from '../../components/UI/Input/Input'\r\nimport Select from '../../components/UI/Select/Select'\r\nimport {createControl, validate, validateForm} from '../../form/formFramework'\r\nimport Auxillary from '../../hoc/Auxillary/Auxillary'\r\nimport axios from '../../axios/axios-quiz'\r\nimport {connect} from \"react-redux\";\r\nimport {createQuizQuestion, finishCreateQuiz} from \"../../store/actions/create\";\r\nfunction createOptionControl(number) {\r\n    return createControl({\r\n        label: `Вариант ${number}`,\r\n        errorMessage: 'Значение не может быть пустым',\r\n        id: number\r\n    }, {required: true})\r\n}\r\n\r\nfunction createFormControls() {\r\n    return {\r\n        question: createControl({\r\n            label: 'Введите вопрос',\r\n            errorMessage: 'Вопрос не может быть пустым'\r\n        }, {required: true}),\r\n        option1: createOptionControl(1),\r\n        option2: createOptionControl(2),\r\n        option3: createOptionControl(3),\r\n        option4: createOptionControl(4)\r\n    }\r\n}\r\n\r\n class QuizCreator extends Component {\r\n\r\n    state = {\r\n\r\n        isFormValid: false,\r\n        rightAnswerId: 1,\r\n        formControls: createFormControls()\r\n    }\r\n\r\n    sibmitHandler = event => {\r\n        event.preventDefault()\r\n    }\r\n\r\n    addQuestionHandler = event => {\r\n        event.preventDefault()\r\n\r\n        const {question,option1,option2,option3,option4}= this.state.formControls\r\n        const questionItem = {\r\n            question: question.value,\r\n            id: this.props.quiz.length + 1,\r\n            rightAnswerId: this.state.rightAnswerId,\r\n            answers: [\r\n                {text: option1.value,id: option1.id},\r\n                {text: option2.value,id: option2.id},\r\n                {text: option3.value,id: option3.id},\r\n                {text: option4.value,id: option4.id}\r\n            ]\r\n        }\r\n        this.props.createQuizQuestion(questionItem)\r\n\r\n        this.setState({\r\n\r\n            isFormValid:false,\r\n            rightAnswerId: 1,\r\n            formControls: createFormControls()\r\n        })\r\n\r\n    }\r\n\r\n\r\n    createQuizHandler =  event => {\r\n       event.preventDefault()\r\n\r\n             axios.post('quizes.json',this.state.quiz)\r\n            this.setState({\r\n\r\n                isFormValid: false,\r\n                rightAnswerId: 1,\r\n                formControls: createFormControls()\r\n            })\r\n            this.props.finishCreateQuiz()\r\n\r\n\r\n\r\n    }\r\n\r\n    changeHandler = (value, controlName) => {\r\n        const formControls = { ...this.state.formControls }\r\n        const control = { ...formControls[controlName] }\r\n\r\n        control.touched = true\r\n        control.value = value\r\n        control.valid = validate(control.value, control.validation)\r\n\r\n        formControls[controlName] = control\r\n\r\n        this.setState({\r\n            formControls,\r\n            isFormValid: validateForm(formControls)\r\n        })\r\n    }\r\n\r\n    renderControls() {\r\n        return Object.keys(this.state.formControls).map((controlName, index) => {\r\n            const control = this.state.formControls[controlName]\r\n\r\n            return (\r\n                <Auxillary key={controlName + index}>\r\n                    <Input\r\n                        label={control.label}\r\n                        value={control.value}\r\n                        valid={control.valid}\r\n                        shouldValidate={!!control.validation}\r\n                        touched={control.touched}\r\n                        errorMessage={control.errorMessage}\r\n                        onChange={event => this.changeHandler(event.target.value, controlName)}\r\n                    />\r\n                    { index === 0 ? <hr /> : null }\r\n                </Auxillary>\r\n            )\r\n        })\r\n    }\r\n\r\n    selectChangeHandler = event => {\r\n        this.setState({\r\n            rightAnswerId: +event.target.value\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const select = <Select\r\n            label=\"Выберите правильный ответ\"\r\n            value={this.state.rightAnswerId}\r\n            onChange={this.selectChangeHandler}\r\n            options={[\r\n                {text: 1, value: 1},\r\n                {text: 2, value: 2},\r\n                {text: 3, value: 3},\r\n                {text: 4, value: 4}\r\n            ]}\r\n        />\r\n\r\n        return (\r\n            <div className='QuizCreator'>\r\n                <div>\r\n                    <h1>Создание теста</h1>\r\n\r\n                    <form onSubmit={this.submitHandler}>\r\n\r\n                        { this.renderControls() }\r\n\r\n                        { select }\r\n\r\n                        <button\r\n                            className=\"primary1\"\r\n                            onClick={this.addQuestionHandler}\r\n                            disabled={!this.state.isFormValid}\r\n                        >\r\n                            Добавить вопрос\r\n                        </button>\r\n\r\n                        <button\r\n                            className=\"success1\"\r\n                            onClick={this.createQuizHandler}\r\n                            disabled={this.props.quiz.length === 0}\r\n                        >\r\n                            Создать тест\r\n                        </button>\r\n\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nfunction mapStateToProps(state) {\r\n    return{\r\n        quiz: state.create.quiz\r\n    }\r\n\r\n}\r\nfunction mapDispatchToProps(dispatch) {\r\n    return{\r\n       createQuizQuestion: item =>dispatch(createQuizQuestion(item)),\r\n        finishCreateQuiz: () =>dispatch(finishCreateQuiz())\r\n    }\r\n\r\n}\r\nexport default connect(mapStateToProps,mapDispatchToProps)(QuizCreator)","import {CREATE_QUIZ_QUESTION, RESET_QUIZ_CREATION} from './actionTypes'\nimport axios from '../../axios/axios-quiz'\n\nexport function createQuizQuestion(item) {\n  return {\n    type: CREATE_QUIZ_QUESTION,\n    item\n  }\n}\n\nexport function resetQuizCreation() {\n  return {\n    type: RESET_QUIZ_CREATION\n  }\n}\n\nexport function finishCreateQuiz() {\n  return async (dispatch, getState) => {\n    await axios.post('/quizes.json', getState().create.quiz)\n    dispatch(resetQuizCreation())\n  }\n}","import React, {Component} from 'react'\nimport {connect} from 'react-redux'\nimport {Redirect} from 'react-router-dom'\nimport {logout} from '../../store/actions/auth'\n\nclass Logout extends Component {\n  componentDidMount() {\n    this.props.logout()\n  }\n\n  render() {\n    return <Redirect to={'/'} />\n  }\n}\n\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    logout: () => dispatch(logout())\n  }\n}\n\nexport default connect(null, mapDispatchToProps)(Logout)","import React, {Component} from 'react'\nimport Layout from './hoc/Layout/Layout'\nimport {Route, Switch, Redirect, withRouter} from 'react-router-dom'\nimport Quiz from './conteiners/Quiz/Quiz'\nimport QuizList from './conteiners/QuizList/QuizList'\nimport Auth from './conteiners/Auth/Auth'\nimport QuizCreator from './conteiners/QuizCreator/QuizCreator'\nimport {connect} from 'react-redux'\nimport Logout from './components/Logout/Logout'\nimport {autoLogin} from \"./store/actions/auth\";\n\nclass App extends Component {\n\n  componentDidMount() {\n    this.props.authLogin()\n  }\n\n  render() {\n\n    let routes = (\n      <Switch>\n        <Route path=\"/auth\" component={Auth} />\n        <Route path=\"/quiz/:id\" component={Quiz} />\n        <Route path=\"/\" exact component={QuizList} />\n        <Redirect to=\"/\" />\n      </Switch>\n    )\n\n    if (this.props.isAuthenticated) {\n      routes = (\n        <Switch>\n          <Route path=\"/quiz-creator\" component={QuizCreator} />\n          <Route path=\"/quiz/:id\" component={Quiz} />\n            <Route path=\"/logout\" component={Logout} />\n          <Route path=\"/\" exact component={QuizList} />\n\n          <Redirect to=\"/\" />\n        </Switch>\n      )\n    }\n\n    return (\n      <Layout>\n        { routes }\n      </Layout>\n    )\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    isAuthenticated: !!state.auth.token\n  }\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    authLogin: () => dispatch(autoLogin())\n  }\n}\n\nexport default withRouter(connect(mapStateToProps,mapDispatchToProps)(App))\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport {BrowserRouter} from 'react-router-dom'\nimport {createStore,compose,applyMiddleware} from 'redux'\nimport {Provider} from 'react-redux'\nimport rootReducer from './store/reducers/rootReducer'\nimport App from './App'\nimport registerServiceWorker from './registerServiceWorker'\nimport thunk from 'redux-thunk'\nconst composeEnhancers =\n    typeof window === 'object' &&\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ?\n        window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\n            // Specify extension’s options like name, actionsBlacklist, actionsCreators, serialize...\n        }) : compose;\n\nconst store = createStore(\n    rootReducer,\n     composeEnhancers(applyMiddleware(thunk))\n)\nconst app =(\n    <Provider store={store}>\n        <BrowserRouter>\n            <App/>\n        </BrowserRouter>\n    </Provider>\n    )\n\nReactDOM.render(app, document.getElementById('root'))\nregisterServiceWorker()\n"],"sourceRoot":""}